# Generated by Django 5.2.4 on 2025-08-06 03:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NodeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(choices=[('start', 'Start Node'), ('end', 'End Node'), ('process', 'Process Node'), ('decision', 'Decision Node'), ('approval', 'Approval Node'), ('document', 'Document Processing'), ('integration', 'Integration Node'), ('notification', 'Notification Node')], max_length=20)),
                ('icon', models.CharField(default='box', max_length=50)),
                ('color', models.CharField(default='#0d6efd', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('config_schema', models.JSONField(blank=True, default=dict)),
                ('requires_user_action', models.BooleanField(default=False)),
                ('allows_multiple_outputs', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('trigger_type', models.CharField(choices=[('manual', 'Manual Start'), ('schedule', 'Scheduled'), ('event', 'Event Triggered'), ('webhook', 'Webhook'), ('document_upload', 'Document Upload')], default='manual', max_length=20)),
                ('definition', models.JSONField(default=dict)),
                ('schedule_config', models.JSONField(blank=True, default=dict)),
                ('total_executions', models.PositiveIntegerField(default=0)),
                ('successful_executions', models.PositiveIntegerField(default=0)),
                ('failed_executions', models.PositiveIntegerField(default=0)),
                ('average_duration_seconds', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_executed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_users', models.ManyToManyField(blank=True, related_name='assigned_workflows', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowNode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('node_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('position_x', models.FloatField(default=0)),
                ('position_y', models.FloatField(default=0)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('is_required', models.BooleanField(default=True)),
                ('timeout_seconds', models.PositiveIntegerField(default=300)),
                ('retry_count', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('node_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.nodetype')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='workflows.workflow')),
            ],
            options={
                'ordering': ['workflow', 'node_id'],
                'unique_together': {('workflow', 'node_id')},
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('trigger_data', models.JSONField(blank=True, default=dict)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='workflows.workflow')),
                ('current_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_executions', to='workflows.workflownode')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowEdge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('condition_type', models.CharField(choices=[('always', 'Always'), ('success', 'On Success'), ('failure', 'On Failure'), ('conditional', 'Conditional'), ('approval_yes', 'Approval Yes'), ('approval_no', 'Approval No')], default='always', max_length=20)),
                ('condition_config', models.JSONField(blank=True, default=dict)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges', to='workflows.workflow')),
                ('source_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_edges', to='workflows.workflownode')),
                ('target_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_edges', to='workflows.workflownode')),
            ],
            options={
                'ordering': ['workflow', 'source_node'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowNodeExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped'), ('waiting_approval', 'Waiting for Approval')], default='pending', max_length=20)),
                ('input_data', models.JSONField(blank=True, default=dict)),
                ('output_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('approval_notes', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_executions', to='workflows.workflowexecution')),
                ('workflow_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.workflownode')),
            ],
            options={
                'ordering': ['workflow_execution', 'started_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('document_processing', 'Document Processing'), ('approval', 'Approval Workflows'), ('customer_service', 'Customer Service'), ('integration', 'System Integration'), ('compliance', 'Compliance & Audit')], max_length=30)),
                ('definition', models.JSONField(default=dict)),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='workflow_templates/')),
                ('setup_time_minutes', models.PositiveIntegerField(default=30)),
                ('complexity_level', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('tags', models.JSONField(blank=True, default=list)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.AddField(
            model_name='workflow',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflows.workflowtemplate'),
        ),
        migrations.CreateModel(
            name='WorkflowAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('action', models.CharField(choices=[('workflow_created', 'Workflow Created'), ('workflow_updated', 'Workflow Updated'), ('workflow_activated', 'Workflow Activated'), ('workflow_deactivated', 'Workflow Deactivated'), ('execution_started', 'Execution Started'), ('execution_completed', 'Execution Completed'), ('execution_failed', 'Execution Failed'), ('node_approved', 'Node Approved'), ('node_rejected', 'Node Rejected'), ('data_accessed', 'Data Accessed'), ('data_modified', 'Data Modified')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflows.workflow')),
                ('workflow_execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflows.workflowexecution')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['workflow', 'action', 'timestamp'], name='workflows_w_workflo_7ea872_idx'), models.Index(fields=['user', 'timestamp'], name='workflows_w_user_id_462a78_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['workflow', 'status'], name='workflows_w_workflo_f6053d_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['triggered_by', 'started_at'], name='workflows_w_trigger_fe5ea2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workflowedge',
            unique_together={('workflow', 'source_node', 'target_node', 'condition_type')},
        ),
        migrations.AlterUniqueTogether(
            name='workflownodeexecution',
            unique_together={('workflow_execution', 'workflow_node')},
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['created_by', 'status'], name='workflows_w_created_e9b9ae_idx'),
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['trigger_type', 'status'], name='workflows_w_trigger_81d201_idx'),
        ),
    ]
